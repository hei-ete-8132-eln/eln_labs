--
-- VHDL Architecture PHA.ledDisplay.masterVersion
--
-- Created:
--          by - silvan.zahno.UNKNOWN (WE6996)
--          at - 14:37:36 11.09.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2018.1 (Build 12)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
LIBRARY gates;
  USE gates.gates.all;


ARCHITECTURE masterVersion OF ledDisplay IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL and01       : std_uLogic;
   SIGNAL and23       : std_uLogic;
   SIGNAL condition_a : std_uLogic;
   SIGNAL condition_b : std_uLogic;
   SIGNAL condition_c : std_uLogic;


   -- Component Declarations
   COMPONENT and2
   GENERIC (
      delay : time := gateDelay
   );
   PORT (
      in1  : IN     std_uLogic ;
      in2  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT and2inv1
   GENERIC (
      delay : time := gateDelay
   );
   PORT (
      in1  : IN     std_uLogic ;
      in2  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT and2inv2
   GENERIC (
      delay : time := gateDelay
   );
   PORT (
      in1  : IN     std_uLogic ;
      in2  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT and3
   GENERIC (
      delay : time := gateDelay
   );
   PORT (
      in1  : IN     std_uLogic ;
      in2  : IN     std_uLogic ;
      in3  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT and4inv4
   GENERIC (
      delay : time := gateDelay
   );
   PORT (
      in1  : IN     std_uLogic ;
      in2  : IN     std_uLogic ;
      in3  : IN     std_uLogic ;
      in4  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT bufferUlogic
   GENERIC (
      delay : time := gateDelay
   );
   PORT (
      in1  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT inverter
   GENERIC (
      delay : time := gateDelay
   );
   PORT (
      in1  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : and2 USE ENTITY gates.and2;
   FOR ALL : and2inv1 USE ENTITY gates.and2inv1;
   FOR ALL : and2inv2 USE ENTITY gates.and2inv2;
   FOR ALL : and3 USE ENTITY gates.and3;
   FOR ALL : and4inv4 USE ENTITY gates.and4inv4;
   FOR ALL : bufferUlogic USE ENTITY gates.bufferUlogic;
   FOR ALL : inverter USE ENTITY gates.inverter;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   I4 : and2
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => condition_c,
         in2  => and23,
         out1 => condition_b
      );
   I6 : and2inv1
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => condition_c,
         in2  => condition_b,
         out1 => leds(3)
      );
   I7 : and2inv1
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => condition_c,
         in2  => condition_a,
         out1 => leds(2)
      );
   I0 : and2inv2
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => phaseDiff(3),
         in2  => phaseDiff(2),
         out1 => and23
      );
   I3 : and2inv2
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => phaseDiff(1),
         in2  => phaseDiff(0),
         out1 => and01
      );
   I1 : and3
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => condition_c,
         in2  => and23,
         in3  => and01,
         out1 => condition_a
      );
   I2 : and4inv4
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => phaseDiff(7),
         in2  => phaseDiff(6),
         in3  => phaseDiff(5),
         in4  => phaseDiff(4),
         out1 => condition_c
      );
   I8 : bufferUlogic
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => condition_c,
         out1 => leds(1)
      );
   I5 : inverter
      GENERIC MAP (
         delay => gateDelay
      )
      PORT MAP (
         in1  => condition_c,
         out1 => leds(4)
      );

END masterVersion;
